/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export const __wbg_node_free: (a: number, b: number) => void;
export const node_id: (a: number) => number;
export const node_stickfigure: (a: number) => number;
export const node_draw_index: (a: number) => number;
export const node_node_type: (a: number) => number;
export const node_set_node_type: (a: number, b: number) => void;
export const node_gradient_mode: (a: number) => number;
export const node_set_gradient_mode: (a: number, b: number) => void;
export const node_triangle_type: (a: number) => number;
export const node_set_triangle_type: (a: number, b: number) => void;
export const node_angle_lock_mode: (a: number) => number;
export const node_set_angle_lock_mode: (a: number, b: number) => void;
export const node_color: (a: number) => number;
export const node_set_color: (a: number, b: number) => void;
export const node_gradient_color: (a: number) => number;
export const node_set_gradient_color: (a: number, b: number) => void;
export const node_circle_outline_color: (a: number) => number;
export const node_set_circle_outline_color: (a: number, b: number) => void;
export const node_set_draw_index: (a: number, b: number) => [number, number];
export const node_get_child_indices: (a: number) => [number, number, number, number];
export const node_get_child_nodes: (a: number) => [number, number, number, number];
export const node_get_sibling_indices: (a: number) => [number, number, number, number];
export const node_get_sibling_nodes: (a: number) => [number, number, number, number];
export const node_get_descendant_indices: (a: number) => [number, number, number, number];
export const node_get_descendant_nodes: (a: number) => [number, number, number, number];
export const node_get_ancestor_indices: (a: number) => [number, number, number, number];
export const node_get_ancestor_nodes: (a: number) => [number, number, number, number];
export const node_get_parent_index: (a: number) => [number, number, number];
export const node_get_parent_node: (a: number) => [number, number, number];
export const node_get_node_options: (a: number) => [number, number, number];
export const node_add_sibling: (a: number, b: any) => [number, number, number];
export const node_add_child: (a: number, b: any) => [number, number, number];
export const node_delete: (a: number) => [number, number];
export const node_is_static: (a: number) => number;
export const node_set_is_static: (a: number, b: number) => void;
export const node_is_stretchy: (a: number) => number;
export const node_set_is_stretchy: (a: number, b: number) => void;
export const node_is_smart_stretch: (a: number) => number;
export const node_set_is_smart_stretch: (a: number, b: number) => void;
export const node_do_not_apply_smart_stretch: (a: number) => number;
export const node_set_do_not_apply_smart_stretch: (a: number, b: number) => void;
export const node_use_segment_color: (a: number) => number;
export const node_set_use_segment_color: (a: number, b: number) => void;
export const node_use_circle_outline: (a: number) => number;
export const node_set_use_circle_outline: (a: number, b: number) => void;
export const node_circle_is_hollow: (a: number) => number;
export const node_set_circle_is_hollow: (a: number, b: number) => void;
export const node_use_gradient: (a: number) => number;
export const node_set_use_gradient: (a: number, b: number) => void;
export const node_reverse_gradient: (a: number) => number;
export const node_set_reverse_gradient: (a: number, b: number) => void;
export const node_use_segment_scale: (a: number) => number;
export const node_set_use_segment_scale: (a: number, b: number) => void;
export const node_scale: (a: number) => number;
export const node_set_scale: (a: number, b: number) => void;
export const node_default_length: (a: number) => number;
export const node_set_default_length: (a: number, b: number) => void;
export const node_length: (a: number) => number;
export const node_set_length: (a: number, b: number) => void;
export const node_default_thickness: (a: number) => number;
export const node_set_default_thickness: (a: number, b: number) => void;
export const node_thickness: (a: number) => number;
export const node_set_thickness: (a: number, b: number) => void;
export const node_segment_curve_radius_and_default_curve_radius: (a: number) => number;
export const node_set_segment_curve_radius_and_default_curve_radius: (a: number, b: number) => void;
export const node_curve_circulization: (a: number) => number;
export const node_set_curve_circulization: (a: number, b: number) => void;
export const node_segment_curve_polyfill_precision: (a: number) => number;
export const node_set_segment_curve_polyfill_precision: (a: number, b: number) => void;
export const node_half_arc: (a: number) => number;
export const node_set_half_arc: (a: number, b: number) => void;
export const node_triangle_upside_down: (a: number) => number;
export const node_set_triangle_upside_down: (a: number, b: number) => void;
export const node_num_polygon_vertices: (a: number) => number;
export const node_set_num_polygon_vertices: (a: number, b: number) => void;
export const node_default_local_angle: (a: number) => number;
export const node_set_default_local_angle: (a: number, b: number) => void;
export const node_local_angle: (a: number) => number;
export const node_set_local_angle: (a: number, b: number) => void;
export const node_default_angle: (a: number) => number;
export const node_set_default_angle: (a: number, b: number) => void;
export const __wbg_stickfigure_free: (a: number, b: number) => void;
export const stickfigure_new: () => number;
export const stickfigure_from_bytes: (a: number, b: number) => [number, number, number];
export const stickfigure_id: (a: number) => number;
export const stickfigure_to_bytes: (a: number) => [number, number, number, number];
export const stickfigure_version: (a: number) => number;
export const stickfigure_set_version: (a: number, b: number) => [number, number];
export const stickfigure_scale: (a: number) => number;
export const stickfigure_set_scale: (a: number, b: number) => void;
export const stickfigure_build: (a: number) => number;
export const stickfigure_set_build: (a: number, b: number) => void;
export const stickfigure_color: (a: number) => number;
export const stickfigure_set_color: (a: number, b: number) => void;
export const stickfigure_to_jsobject: (a: number) => any;
export const stickfigure_add_polyfill: (a: number, b: any) => [number, number, number];
export const stickfigure_get_polyfill: (a: number, b: number) => [number, number, number];
export const stickfigure_get_all_polyfills: (a: number) => [number, number];
export const stickfigure_get_node: (a: number, b: number) => [number, number, number];
export const stickfigure_get_nodes: (a: number, b: number, c: number) => [number, number, number, number];
export const stickfigure_get_all_node_indices: (a: number) => [number, number, number, number];
export const stickfigure_get_all_nodes: (a: number) => [number, number, number, number];
export const main: () => void;
export const __wbg_color_free: (a: number, b: number) => void;
export const __wbg_get_color_alpha: (a: number) => number;
export const __wbg_set_color_alpha: (a: number, b: number) => void;
export const __wbg_get_color_blue: (a: number) => number;
export const __wbg_set_color_blue: (a: number, b: number) => void;
export const __wbg_get_color_green: (a: number) => number;
export const __wbg_set_color_green: (a: number, b: number) => void;
export const __wbg_get_color_red: (a: number) => number;
export const __wbg_set_color_red: (a: number, b: number) => void;
export const color_from_rgba: (a: number, b: number, c: number, d: number) => number;
export const color_from_rgb: (a: number, b: number, c: number) => number;
export const color_from_hex: (a: number, b: number) => [number, number, number];
export const color_to_hex: (a: number) => [number, number];
export const __wbg_connectordata_free: (a: number, b: number) => void;
export const __wbg_polyfill_free: (a: number, b: number) => void;
export const polyfill_stickfigure: (a: number) => number;
export const polyfill_id: (a: number) => number;
export const polyfill_anchor_node_draw_index: (a: number) => number;
export const polyfill_set_anchor_node_draw_index: (a: number, b: number) => [number, number];
export const polyfill_color: (a: number) => number;
export const polyfill_set_color: (a: number, b: number) => void;
export const polyfill_use_polyfill_color: (a: number) => number;
export const polyfill_set_use_polyfill_color: (a: number, b: number) => void;
export const polyfill_attached_node_draw_indices: (a: number) => [number, number];
export const polyfill_set_attached_node_draw_indices: (a: number, b: number, c: number) => [number, number];
export const polyfill_insert_attached_node_draw_indices_after: (a: number, b: number, c: number, d: number) => [number, number];
export const polyfill_insert_attached_node_draw_indices_before: (a: number, b: number, c: number, d: number) => [number, number];
export const polyfill_remove_attached_node_draw_indices: (a: number, b: number, c: number) => [number, number];
export const polyfill_try_set_attached_node_draw_indices: (a: number, b: number, c: number) => [number, number];
export const polyfill_try_remove_attached_node_draw_indices: (a: number, b: number, c: number) => [number, number];
export const __wbindgen_malloc: (a: number, b: number) => number;
export const __wbindgen_realloc: (a: number, b: number, c: number, d: number) => number;
export const __wbindgen_exn_store: (a: number) => void;
export const __externref_table_alloc: () => number;
export const __wbindgen_export_4: WebAssembly.Table;
export const __wbindgen_free: (a: number, b: number, c: number) => void;
export const __externref_table_dealloc: (a: number) => void;
export const __externref_drop_slice: (a: number, b: number) => void;
export const __wbindgen_start: () => void;
